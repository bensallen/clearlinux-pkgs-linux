#!/bin/bash
#
# Author: Todor Minchev <todor.minchev@linux.intel.com>
# Modified-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
#
# Copyright Â© 2014 Intel Corporation
#
# Kernel installer script - installs kernel, initrd, kernel config 
# and system map and creates a bootloader entry for the new kernel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# Arguments:
#   $1 - kernel version
#   $2 - kernel image file
#   $3 - kernel map file
#   $4 - default install path (blank if root directory)

KERNEL_VER=$1
KERNEL_IMAGE=$2
KERNEL_MAP=$3
INSTALL_PATH=$4
KERNEL_MODULES=/usr/lib/modules/${KERNEL_VER}

validate_install_path () {
	if [ ! -d "$1" ]; then
		echo -e "\n *** Invalid installation path *** : $1\n"    	1>&2
		exit 1
 	fi
}

validate_kernel_version () {
	if [ -z "$1" ]; then
		echo -e "\n *** Kernel version not found *** \n"    		1>&2
		exit 1
 	fi
}

validate_kernel_image () {
	if [ ! -f "$1" ]; then
		echo -e "\n *** Kernel image not found *** \n"    		1>&2
		echo -e "\n *** Please compile your kernel and modules *** \n" 	1>&2
		exit 1
 	fi
}

validate_system_map () {
	if [ ! -f "$1" ]; then
		echo -e "\n *** Kernel map file not found *** \n"    		1>&2
		echo -e "\n *** Please compile your kernel *** \n"    		1>&2
		exit 1
 	fi
}

validate_modules_install () {
	if [ ! -d "$1" ]; then
		echo -e "\n *** Kernel modules not found *** : $1\n"    	1>&2
		echo -e "\n *** Please run 'make modules_install' first*** \n"  1>&2
		exit 1
 	fi
}

validate_kernel_version ${KERNEL_VER}
validate_kernel_image ${KERNEL_IMAGE}
validate_system_map ${KERNEL_MAP}
validate_install_path ${INSTALL_PATH}
validate_modules_install ${KERNEL_MODULES}

ret=0

# Mount /boot partition
systemctl start boot.mount
((ret+=$?))

# Re-mount /boot partition as rw
mount -o remount,rw /boot
((ret+=$?))

# Use systemd kernel-install script
kernel-install add $KERNEL_VER $KERNEL_IMAGE
((ret+=$?))

# Unmount /boot partition
systemctl stop  boot.mount
((ret+=$?))

exit $ret
